name: backend

on:
  push:
    branches:
      - main
  #pull_request:
  #  branches:
  #    - main
  # 定期実行の設定
  schedule:
   - cron: '0 12 * * *'

defaults:
  run:
    working-directory: backend

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 20.x

      - run: npm ci
      - run: npm run test -- --coverage
      - run: npm run build     

      # stepci dist/index.jsをバックグラウンド実行 & wait health check ok &next command exec
      - run: node dist/index.js &
      - run: npx wait-on -t 10000 http://localhost:8080/api/health
      - run: npm run test:api

      # upload artifact
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage
          path: backend/coverage/**
          retention-days: 5
      - uses: actions/upload-artifact@v4
        with:
          name: dist
          path: backend/dist/index.js
          retention-days: 5
  deploy:
    needs: build #ビルド成功時
    if: github.event_name == 'push' #push時のみ
    runs-on: ubuntu:latest
    steps:
      - run: rsync -v -e 'ssh -i ../../github-actions-key.pem' dist/index.js ${SERVER_USER}@${SERVER_IP}:~/index.js
        env:
          SERVER_USER: ${{ secrets.BACKEND_SERVER_USER}}
          SERVER_IP: ${{ secrets.BACKEND_SERVER_IP }}
      - run: ssh -i ../../github-actions-key.pem ${SERVER_USER}@${SERVER_IP} sudo systemctl restart backend
        env:
          SERVER_USER: ${{ secrets.BACKEND_SERVER_USER}}
          SERVER_IP: ${{ secrets.BACKEND_SERVER_IP }}
      - run: ssh -i ../../github-actions-key.pem ${SERVER_USER}@${SERVER_IP} sudo systemctl start backend
        env:
          SERVER_USER: ${{ secrets.BACKEND_SERVER_USER}}
          SERVER_IP: ${{ secrets.BACKEND_SERVER_IP }}

